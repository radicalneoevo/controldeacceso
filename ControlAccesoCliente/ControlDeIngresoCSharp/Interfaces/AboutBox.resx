<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACRAU0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsXuST1qFpSe9MoxWTJuwLE0ZJDfSg0KOSPUGspDQY+Yf7tIoz
        tz604DlfcEUqgAJ/vViy0M/hPuacRgt7DFGPk9wacw/1h/2qQmxoXlR6DJpQNwA7sacRy/sKUDBHsuaR
        IxuWJ7dqTFKBxS4oJY0CnAmjFAHNMhi7iKPMYGgioWcuSsY3EdWPQVcY3IZMbrZyxpVuXflsonp3NVhG
        qHc53P6noPpTgJJJAkaFnboFGSa2jFCt3Ln2hQABj6CnIRM4RcZPqeKz7lFt9Mnnaf8A0hF3iIDoBJsJ
        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
        opMaJkqwvSiimtjWJLD0q4v3aKKk6Y7H/9k=
</value>
  </data>
</root>